#!/bin/bash

set -e

echo -e "\n-------------------------------------------------------------------------------------------\n"
date

set -x

cd "$(dirname "$0")"
deploy_dir="/usr/local/bin/deploy"
test_repo=/tmp/test-repo
last_build="$HOME/.last_build"

rm -rf $test_repo
cd ../../ # we're in repo root

# copy the repo over to a temp directory and switch to it
rsync -ax --exclude site-builder/target . $test_repo

cd $test_repo
token=$(cat ./.token)
ip_token=$(cat ./.ip_token)


git reset --hard
git checkout gh-pages
git fetch
git reset --hard origin/gh-pages

expected_dir="test-repo"
current_dir=$(pwd)
if [[ $current_dir != */$expected_dir ]]; then
    echo "Error: Current directory does not end with '$expected_dir', exiting"
    exit 1
fi

echo "stopped before find"
# delete everything except for .git
find . -mindepth 1 -not -path "./.git*" -exec rm -rf {} +
outdir="$test_repo/site"

# run the binary and tailwind to generate  deployment artifacts
GH_TOKEN=$token IP_API_TOKEN=$ip_token site-builder --project-dir="$deploy_dir" --out-dir="$outdir"
tailwindcss --content "$outdir/**/*.html" -c "$deploy_dir/tailwind.config.js" -i "$deploy_dir/tw.css" -o "$outdir/static/style.css"

# hash testable file generated by the binary
cp -r "$outdir"/* .
rm -rf "$outdir"
new="index.html"

if cmp --silent "$last_build" "$new"; then
    set +x
    echo "files are the same, no need to publish"
    echo -e "\n-------------------------------------------------------------------------------------------\n"
    exit 0
fi

set +x
echo "files differ, publishing"
set -x
publish_date=$(date)
git add --all
git commit -m "Bot publish: $publish_date"
git push

cp "$new" "$last_build"

set +x
echo -e "\n-------------------------------------------------------------------------------------------\n"
